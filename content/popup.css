::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background-color: rgba(155, 155, 155, 0.5);
  border-radius: 4px;
  border: transparent;
}

article {
  display: flex;
  flex-direction: column;
  gap: 0.25em;

  margin: 0;
  padding: 1em;
  max-width: 24em;
  max-height: 40vh;
  overflow-y: auto;

  background-color: var(--color-background);
  border-radius: var(--border-radius);
  color: var(--color-text);
  font-family: var(--font-family);

  box-shadow: 5px 5px 15px 0px rgba(0, 0, 0, 0.5);
  -webkit-overflow-scrolling: touch;
  touch-action: pan-y;
}

#mine-buttons,
#review-buttons {
  display: flex;
  flex-direction: row;
  gap: 0.25em;
  font-size: 12px;
}

button {
  display: inline-block;

  padding: 0.25em 0.5em;
  margin: 0;
  border: none;

  font-size: 85%;
  border-radius: var(--border-radius);
  color: white;
  text-align: center;
  text-decoration: none;
  cursor: pointer;

  filter: saturate(50%);
}

button:hover {
  filter: brightness(120%);
}

button:active {
  filter: brightness(80%);
}

#header {
  display: flex;
  flex-direction: row;
  justify-content: left;
  align-items: center;
  gap: 0.5em;

  margin: 0;
  padding: 0;

  font-size: 150%;
  font-weight: bold;
}

#header a {
  color: var(--color-text);
}

#header a::after {
  content: " ðŸ”—";
  font-size: 50%;
  vertical-align: middle;
}

.state {
  display: flex;
  flex-direction: column;
  margin-left: auto;

  font-size: 50%;
  line-height: 100%;
}

.metainfo {
  display: flex;
  flex-direction: row;
  font-size: 12px;
  gap: 0.5em;
  white-space: nowrap;
  margin: 0.75em 0;
}

.pitch span {
  padding: 1px 1px 1px 2px;
  line-height: 1em;
  border-style: solid;
  border-image-slice: 2;
  border-image-source: linear-gradient(
    to bottom,
    rgba(232, 104, 123, 0.8),
    rgba(75, 141, 255, 0.8)
  );
}

.pitch .low {
  border-width: 0 2px 2px 0;
  margin-right: -2px;
}
.pitch .high {
  border-width: 2px 2px 0 0;
  margin-right: -2px;
}
.pitch .low-final {
  border-width: 0 0 2px 0;
}
.pitch .high-final {
  border-width: 2px 0 0 0;
}
.pitch .low-final {
  border-width: 0 0 2px 0;
}
.pitch .high-final {
  border-width: 2px 0 0 0;
}

h2 {
  font-size: 0.75em;
  filter: var(--less-contrast-filter);
  margin-top: 1em;
  margin-bottom: 0.5em;
}

ol {
  margin: 0;
  padding: 0;
  padding-left: 2em;
}

button.add,
button.edit-add-review {
  background-color: rgb(75, 141, 255);
}

button.forq {
  background-color: rgb(255, 69, 0);
}

button.blacklist {
  background-color: rgb(119, 119, 119);
}

button.never-forget {
  background-color: rgb(112, 192, 0);
}

button.nothing {
  background-color: rgb(255, 0, 0);
}

button.something {
  background-color: rgb(255, 0, 0);
}

button.hard {
  background-color: rgb(255, 69, 0);
}

button.good {
  background-color: rgb(112, 192, 0);
}

button.easy {
  background-color: rgb(75, 141, 255);
}

/* .state .unparsed { } */

.state .locked {
  color: rgb(119, 119, 119);
}

.state .suspended {
  color: rgb(119, 119, 119);
}

.state .blacklisted {
  color: rgb(119, 119, 119);
}

.state .never-forget {
  color: rgb(112, 192, 0);
}

.state .not-in-deck {
  color: rgba(75, 141, 255);
}

.state .new {
  color: rgb(75, 141, 255);
}

.state .learning {
  color: rgb(94, 167, 128);
}

.state .known {
  color: rgb(112, 192, 0);
}

.state .due {
  color: rgb(255, 69, 0);
}

.state .failed {
  color: rgb(255, 0, 0);
}

.kanji-meanings {
  display: flex;
  flex-wrap: wrap;
  gap: 1.5em;
  margin-bottom: 1em;
}

.kanji-meanings a {
  text-decoration: none;
  color: inherit;
  cursor: pointer;
}

.kanji-meanings a:link,
.kanji-meanings a:visited,
.kanji-meanings a:hover,
.kanji-meanings a:active {
  color: inherit;
  text-decoration: none;
}

.kanji-meaning {
  background-color: var(--color-background-alt);
  padding: 0.25em 0.5em;
  border-radius: var(--border-radius);
  font-size: 0.9em;
}

.hindi-meanings {
  margin: 0.5em 0;
  padding: 0.5em 0;
  border-bottom: 1px solid var(--border-color);
}

.hindi-meanings h2 {
  font-size: 0.8em;
  margin: 0 0 0.3em 0;
  color: var(--text-color-secondary);
}

.meaning-list {
  font-size: 0.95em;
  line-height: 1.4;
  margin-left: 0.5em;
}

.meaning-set {
  display: flex;
  align-items: flex-start;
  margin-bottom: 0.3em;
}

.set-number {
  color: var(--text-color-secondary);
  margin-right: 0.3em;
  flex-shrink: 0;
}

.toggle-more {
  background: none;
  border: none;
  color: var(--text-color-secondary);
  padding: 0 0.3em;
  cursor: pointer;
  font-size: 0.8em;
  margin-left: 0.5em;
}

.toggle-more:hover {
  color: var(--text-color);
}

.more-meanings {
  display: none;
  margin-top: 0.2em;
}

.more-meanings.expanded {
  display: block;
}

.immersion-example {
  margin-top: 1em;
  border-top: 1px solid var(--border-color);
  padding-top: 1em;
}

.example-content {
  display: flex;
  flex-direction: column;
  gap: 0.5em;
}

.example-sentence {
  font-size: 1.1em;
  color: var(--text-color);
}

.example-translation {
  font-size: 0.9em;
  color: var(--text-color-secondary);
}

.immersion-example .example-nav {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1em;
  margin-top: 0.5em;
}

.immersion-example .example-nav button {
  padding: 0.2em 0.5em;
  background-color: #4a4a4a; /* medium gray */
  color: white;
}

.immersion-example .example-nav button:hover {
  background-color: #5a5a5a; /* lighter gray */
  color: white;
}

.immersion-example .example-nav button:active {
  background-color: #3a3a3a; /* darker gray */
  color: white;
}

.immersion-example .example-nav button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.immersion-kit-button {
  background-color: yellow;
  color: black;
  border-radius: 4px;
  cursor: pointer;
}

.image-audio-container {
  position: relative;
  display: inline-block;
  width: 100%;
  margin-bottom: 10px;
}

.example-image {
  max-width: 100%;
  display: block;
  border-radius: 8px;
}

.audio-button {
  position: absolute;
  bottom: 10px;
  right: 10px;
  cursor: pointer;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  border-radius: 50%;
  padding: 5px 10px;
  opacity: 0; /* Initially hidden */
  transition: opacity 0.3s ease; /* Smooth transition for hover effect */
}

/* Show the button on hover over the container */
.image-audio-container:hover .audio-button {
  opacity: 1;
}

/* If there's no image, make the button always visible */
.image-audio-container:not(:has(.example-image)) .audio-button {
  opacity: 1;
  display: block;
}
